user  nginx nginx;
worker_processes auto;

error_log  /logs/nginx_error.log  warn;
pid        /var/run/nginx.pid;

worker_rlimit_nofile 65535;

events {
    use epoll;
    worker_connections 10240;
    multi_accept on;
}

http {
    include       mime.types;
    default_type  application/octet-stream;

    charset utf8;

    server_tokens off;
    server_name_in_redirect off;

    server_names_hash_bucket_size 64;
    client_header_buffer_size 4k;
    large_client_header_buffers 4 4k;

    client_max_body_size 10m;
    client_body_buffer_size 128K;

    sendfile  on;
    tcp_nopush on;
    keepalive_timeout 60;

    fastcgi_connect_timeout 300;
    fastcgi_send_timeout 300;
    fastcgi_read_timeout 300;
    fastcgi_buffer_size 32k;
    fastcgi_buffers 32 32k;
    fastcgi_busy_buffers_size 64k;
    fastcgi_temp_file_write_size 128k;

    gzip on;
    gzip_min_length  1k;
    gzip_buffers     4 16k;
    gzip_http_version 1.1;
    gzip_comp_level 6;
    gzip_types     text/plain application/javascript application/x-javascript text/javascript text/css application/xml application/xml+rss;

    log_format jflog '$remote_addr | $remote_user | $time_local | $request | $status | '
            '$bytes_sent | $body_bytes_sent | $host | $http_referer | $http_user_agent | '
            '$upstream_addr | $gzip_ratio | $http_x_forwarded_for | $request_time | $upstream_response_time';

    access_log off;

    open_file_cache max=65535 inactive=20s;
    open_file_cache_valid    30s;
    open_file_cache_min_uses 2;
    open_file_cache_errors   on;

    proxy_connect_timeout      300;
    proxy_send_timeout         300;
    proxy_read_timeout         300;

    proxy_buffering on;
    proxy_buffer_size          32k;
    proxy_buffers              128 32k;
    proxy_busy_buffers_size    256k;
    proxy_temp_file_write_size 256k;

    #proxy_temp_path   /data/cache/temp;
    #proxy_cache_path  /data/cache/qbbapp  levels=1:2  keys_zone=cache_qbbapp:1000m inactive=24h max_size=10g;

    # 禁止未授权访问
    # server {
    #     listen 80 default_server;
    #     server_name _;

    #     # 监控 nginx 状态
    #     location /nginx_status {
    #         stub_status on;
    #         allow 127.0.0.1;
    #         deny all;
    #     }

    #     location / {
    #         return 444;
    #     }
    #     access_log  off;
    # }

    include conf.d/*.conf;
}
